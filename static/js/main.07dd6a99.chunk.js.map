{"version":3,"sources":["components/fullPage.js","components/DownIcon.js","sections/titleSection.js","sections/aboutSection.js","sections/skillSection.js","components/navigation.js","App.js","serviceWorker.js","index.js"],"names":["fullPage","children","this","props","className","backcolor","Component","DownIcon","onClick","style","display","flexDirection","alignItems","justifyContent","marginBottom","transform","maxHeight","maxWidth","src","icon","titleSection","scroller","scrollTo","duration","delay","smooth","colorSituation","data","title","Object","keys","link","map","key","url","discription","icons","down","scroll","aboutSection","sections","items","content","skillSection","eachSkill","image","NavigationBar","changeColor","href","activeClass","to","spy","offset","App","setState","state","console","log","followMouse","name","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.07dd6a99.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./fullPage.css\";\r\n\r\nclass fullPage extends Component {\r\n  render() {\r\n    // what is this children????\r\n    const { children } = this.props;\r\n    return (\r\n      <div>\r\n        <div className={this.props.backcolor ? \"black\" : \"page\"}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default fullPage;\r\n","import React from \"react\";\r\n\r\nconst DownIcon = props => {\r\n  return (\r\n    <div\r\n      onClick={props.onClick}\r\n      style={{\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        marginBottom: \"-29px\",\r\n        transform: \"translateY(-75px)\"\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          maxHeight: \"25px\",\r\n          maxWidth: \"30px\"\r\n        }}\r\n      >\r\n        <img src={props.icon} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default DownIcon;\r\n","import React, { Component } from \"react\";\r\n\r\nimport FullPage from \"../components/fullPage.js\";\r\nimport data from \"../data.json\";\r\nimport { SocialIcon } from \"react-social-icons\";\r\nimport DownIcon from \"../components/DownIcon\";\r\n\r\nimport {\r\n  Link,\r\n  DirectLink,\r\n  Element,\r\n  Events,\r\n  animateScroll as scroll,\r\n  scroller\r\n} from \"react-scroll\";\r\n\r\nimport \"./titleSection.css\";\r\n\r\nclass titleSection extends Component {\r\n  scrollTo() {\r\n    scroller.scrollTo(\"scroll-to-element\", {\r\n      duration: 800,\r\n      delay: 0,\r\n      smooth: \"easeInOutQuart\"\r\n    });\r\n  }\r\n  render() {\r\n    const { colorSituation } = this.props;\r\n    return (\r\n      <div>\r\n        <div>\r\n          <FullPage backcolor={colorSituation}>\r\n            <h1 className=\"title\">{data.title}</h1>\r\n            <div className=\"icons-wrapper\">\r\n              {Object.keys(data.link).map(key => {\r\n                return (\r\n                  <div className=\"icons\">\r\n                    <SocialIcon url={data.link[key]} />\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n            <p className=\"texticons\">{data.discription}</p>\r\n          </FullPage>\r\n        </div>\r\n        <DownIcon\r\n          icon={data.icons.down}\r\n          onClick={() => {\r\n            scroll.scrollTo(700);\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default titleSection;\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport FullPage from \"../components/fullPage\";\r\nimport DownIcon from \"../components/DownIcon\";\r\n\r\nimport {\r\n  Link,\r\n  DirectLink,\r\n  Element,\r\n  Events,\r\n  animateScroll as scroll,\r\n  scroller\r\n} from \"react-scroll\";\r\n\r\nimport \"./aboutSection.css\";\r\n\r\nclass aboutSection extends Component {\r\n  scrollTo() {\r\n    scroller.scrollTo(\"scroll-to-element\", {\r\n      duration: 800,\r\n      delay: 0,\r\n      smooth: \"easeInOutQuart\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { colorSituation } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <div>\r\n          <FullPage backcolor={colorSituation}>\r\n            <h3>{data.sections[0].title}</h3>\r\n            <p className=\"paragraphs\">{data.sections[0].items.content}</p>\r\n          </FullPage>\r\n        </div>\r\n        <DownIcon\r\n          icon={data.icons.down}\r\n          onClick={() => {\r\n            scroll.scrollTo(1900);\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default aboutSection;\r\n","import React, { Component } from \"react\";\r\nimport data from \"../data.json\";\r\nimport FullPage from \"../components/fullPage\";\r\nimport DownIcon from \"../components/DownIcon\";\r\n\r\nimport \"./skillSection.css\";\r\n\r\nclass skillSection extends Component {\r\n  render() {\r\n    const { colorSituation } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <FullPage backcolor={colorSituation}>\r\n          <h3>{data.sections[1].title}</h3>\r\n          <div className=\"cards\">\r\n            {data.sections[1].items.map(eachSkill => {\r\n              return (\r\n                <div className=\"logoanddiscription\">\r\n                  <div className=\"image-wrapper\">\r\n                    <img src={eachSkill.content.image} />\r\n                  </div>\r\n                  <h4 className=\"skill-text\">\r\n                    {eachSkill.content.discription}\r\n                  </h4>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </FullPage>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default skillSection;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./navigation.css\";\r\n\r\nimport { Link } from \"react-scroll\";\r\n\r\nclass NavigationBar extends Component {\r\n  render() {\r\n    const { changeColor } = this.props;\r\n    return (\r\n      <div>\r\n        <nav className=\"mainnav\">\r\n          <ul className={this.props.backcolor ? \"anothercolor\" : \"listbar\"}>\r\n            <li>\r\n              <a\r\n                href=\"#home\"\r\n                className=\"changecolorclick\"\r\n                onClick={changeColor}\r\n              >\r\n                color\r\n              </a>\r\n            </li>\r\n\r\n            <li className=\"topnav_bar\">\r\n              <Link\r\n                activeClass=\"active\"\r\n                to=\"About\"\r\n                spy={true}\r\n                smooth={true}\r\n                offset={0}\r\n                duration={500}\r\n              >\r\n                About\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"topnav_bar\">\r\n              <Link\r\n                activeClass=\"active\"\r\n                to=\"Skill\"\r\n                spy={true}\r\n                smooth={true}\r\n                offset={0}\r\n                duration={500}\r\n              >\r\n                Skill\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default NavigationBar;\r\n","import React, { Component } from \"react\";\r\n\r\nimport TitleSection from \"./sections/titleSection\";\r\nimport AboutSection from \"./sections/aboutSection\";\r\nimport SkillPart from \"./sections/skillSection\";\r\n\r\nimport MyNav from \"./components/navigation\";\r\n\r\nimport { Element } from \"react-scroll\";\r\n\r\nimport SnowStorm from \"react-snowstorm\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.changeColor = this.changeColor.bind(this);\r\n    this.state = {\r\n      colorSituation: true\r\n    };\r\n  }\r\n\r\n  changeColor = () => {\r\n    this.setState({ colorSituation: !this.state.colorSituation });\r\n    console.log(this.state.colorSituation);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <MyNav\r\n          changeColor={this.changeColor}\r\n          backcolor={this.state.colorSituation}\r\n        />\r\n        <SnowStorm followMouse={false} />\r\n        <TitleSection colorSituation={this.state.colorSituation} />\r\n        <Element name=\"About\">\r\n          <AboutSection colorSituation={this.state.colorSituation} />\r\n        </Element>\r\n        <Element name=\"Skill\">\r\n          <SkillPart colorSituation={this.state.colorSituation} />\r\n        </Element>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}